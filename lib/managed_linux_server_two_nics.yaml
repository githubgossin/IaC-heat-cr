heat_template_version: 2013-05-23

description: >
  HOT template for a GNU/Linux server with a nic in the admin network
  and a nic in another network. A floating IP will be associated with
  the IP in the other network (not the admin network).

parameters:
  key_name:
    type: string
    description: Name of keypair to assign to servers
  server_name:
    type: string
    description: Name of linux server
  image:
    type: string
    description: Name of image to use for servers
    default: Ubuntu Server 18.04 LTS (Bionic Beaver) amd64
  flavor:
    type: string
    description: Flavor to use for servers
  sec_group_linux:
    type: comma_delimited_list
    description: Security groups
  public_net:
    type: string
    description: >
      ID or name of public network for which floating IP addresses will be allocated
  admin_net:
    type: string
    description: UUID of admin net created in base template (iac_admin_net)
  admin_subnet:
    type: string
    description: UUID of admin subnet created in base template (192.168.180.0/24)
  other_net:
    type: string
    description: UUID of other net created in base template (iac_other_net)
  other_subnet:
    type: string
    description: UUID of other subnet created in base template (192.168.190.0/24)
  dns_ip:
    type: string
    description: IP address of server dir01 created in base template
  manager_ip:
    type: string
    description: IP address of server manager created in base template

resources:

  server:
    type: OS::Nova::Server
    properties:
      name: { get_param: server_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: server_port_admin }
        - port: { get_resource: server_port_other }
      user_data_format: RAW
      user_data:
        str_replace:
          template: { get_file: ubuntu_boot_two_nics.bash }
          params:
            manager_ip_address: { get_param: manager_ip }
            dns_ip_address: { get_param: dns_ip }

  server_port_admin:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: admin_net }
      security_groups: { get_param: sec_group_linux }
      fixed_ips:
        - subnet_id: { get_param: admin_subnet }

  server_port_other:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: other_net }
      security_groups: { get_param: sec_group_linux }
      fixed_ips:
        - subnet_id: { get_param: other_subnet }

  server_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
      port_id: { get_resource: server_port_other }

